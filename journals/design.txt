设计思路：
    对于一个需要爬取的网站，其
        一个出版社有多个期刊，一个期刊有多个卷期，一个卷期有多篇文章
    将其分成三个层次：website（出版社）、journals（期刊）、article（文章）

        website层
            这层需要要爬取的数据有两项：期刊的名称与对应的卷期列表链接（所有期刊）
            爬取到的数据会存储到redis的一个set集合中

        journals层
            数据：
                YEAR、VOLUME、ISSUE与其他期刊层可以爬取的信息（一般是eissn和issn）

            主要目的：
                是爬取期刊的所有卷期，并判断是否是增量，将增量数据传给下一层

            执行流程：
                会遍历上一层存储到set的集合的所有卷期
                然后判断卷期是否是需要爬取的（redis中有一个存储不需要的期刊的url的set，可以通过job的方法可以向set添加数据）
                爬取公共信息（eissn和issn）：
                    公共信息会存储到redis中，程序会先从redis中读取，若没有则爬取（待改进）

                然后爬取数据，判断是否是增量：
                    redis中有一个存储期刊爬取进度的set（一个期刊对应一个set），是否是增量通过判断其是否在set中（这时不会
                    存储到set中，当卷期爬取完成后存储）

                然后将增量存储到redis中

        article层
            这层一般分为两部分：爬取文章的列表（对应first方法）与具体文章（对应second方法）
            back方法（可以不要）

            一个卷期爬取完成后，会存储数据与进度


        当所有期刊执行完成后，会将数据写到Excel中，错误信息会生成一个log，job中会有测试和重新执行log中数据的方法
        错误处理：
            journals和article层在出错后会记录下当前出错的数据，在结束时会将数据写到log中
            job中提供许多重新执行log中数据的方法







